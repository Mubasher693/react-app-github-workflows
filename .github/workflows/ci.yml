name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # OS directory where you want to cache it, Will be diff for diff OS.
      # Name of the file base on os and hash method.
      # If above name file not found then look for below prefix.
      # https://github.com/actions/cache/blob/main/examples.md#node---npm
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-


      - name: Use NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm ci
      # Run test
      - run: npm test -- --coverage
        env:
          CI: true
      # Upload test result
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      # Build and Deploy on push event
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      # Upload Build Folder
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      # Create a release
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy On Staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain smart-goldfish.surge.sh
        env: 
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}